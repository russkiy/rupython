import re

БезФлагов = 0
Знаки7бит = A = re.ASCII
Отладка = re.DEBUG
ИгнорРегистр = I = re.IGNORECASE
УчЛокаль = L = re.LOCALE
Многостроч = M = re.MULTILINE
ТочкаДляВсего = S = re.DOTALL
Многобайт = U = re.UNICODE
Развёрнутое = X = re.VERBOSE

class Шаблон:
    def __init__(здесь, объект):
        здесь.объект = объект
        здесь.флаги = объект.flags
        здесь.число_групп = объект.groups
        здесь.номераНазвГр = объект.groupindex
        здесь.шаблон = объект.pattern

    def Поиск(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'строка': 'string', 'нач_поз': 'pos', 'кон_поз': 'endpos' })
        return здесь.объект.search(*ПА, **ИА)

    def СовпадНач(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'строка': 'string', 'нач_поз': 'pos', 'кон_поз': 'endpos' })
        return здесь.объект.match(*ПА, **ИА)

    def ПолнСоотв(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'строка': 'string', 'нач_поз': 'pos', 'кон_поз': 'endpos' })
        return здесь.объект.fullmatch(*ПА, **ИА)

    def Разбить(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'строка': 'string', 'макс_делений': 'maxsplit' })
        return здесь.объект.split(*ПА, **ИА)

    def НайтиВсё(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'строка': 'string', 'нач_поз': 'pos', 'кон_поз': 'endpos' })
        return здесь.объект.findall(*ПА, **ИА)

    def ИскатьПеречисл(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'строка': 'string', 'нач_поз': 'pos', 'кон_поз': 'endpos' })
        return здесь.объект.finditer(*ПА, **ИА)

    def Заменить(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'замена': 'repl', 'строка': 'string', 'количество': 'count' })
        return здесь.объект.sub(*ПА, **ИА)

    def ЗаменитьСч(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, \
            { 'замена': 'repl', 'строка': 'string', 'количество': 'count' })
        return здесь.объект.subn(*ПА, **ИА)


class Соответствие:
    def __init__(здесь, объект):
        здесь.объект = объект
        здесь.нач_поз = объект.pos
        здесь.кон_поз = объект.endpos
        здесь.послИндекс = объект.lastindex
        здесь.послГруппа = объект.lastgroup
        здесь.регВыр = объект.re
        здесь.строка = объект.string

    def Развернуть(здесь, шаблон): return здесь.объект.expand(шаблон)
    def Группа(здесь, *группы): return здесь.объект.group(*группы)
    def __getitem__(здесь, индекс): return объект[индекс]

    def Группы(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, { 'по_умолчанию': 'default' })
        return здесь.объект.groups(*ПА, **ИА)

    def ИменовГруппы(здесь, *ПА, **ИА):
        ИА = __Заголовочный_код__.Заменить_ключи_в_словаре(ИА, { 'по_умолчанию': 'default' })
        return здесь.объект.groupdict(*ПА, **ИА)

    def Начало(здесь, *группа): return здесь.объект.start(*группа)
    def Конец(здесь, *группа): return здесь.объект.end(*группа)

Флаги = re.RegexFlag

def Создать(шаблон, флаги = 0): рез = re.compile(шаблон, flags=флаги); return Шаблон(re.compile(рез)) if type(рез) == re.Pattern else рез
def Поиск(шаблон, строка, флаги = 0): return re.search(шаблон, строка, flags=флаги)
def СовпадНач(шаблон, строка, флаги = 0): return re.match(шаблон, строка, flags=флаги)
def ПолнСоотв(шаблон, строка, флаги = 0): return re.fullmatch(шаблон, строка, flags=флаги)
def Разбить(шаблон, строка, макс_делений = 0, флаги = 0): return re.split(шаблон, строка, maxsplit=макс_делений, flags=флаги)
def НайтиВсё(шаблон, строка, флаги = 0): return re.findall(шаблон, строка, flags=флаги)
def ИскатьПеречисл(шаблон, строка, флаги = 0): return re.finditer(шаблон, строка, flags=флаги)
def Заменить(шаблон, замена, количество = 0, флаги = 0): return re.sub(шаблон, замена, строка, count=количество, flags=флаги)
def ЗаменитьСч(шаблон, замена, количество = 0, флаги = 0): return re.sub(шаблон, замена, строка, count=количество, flags=флаги)
def ЭкранШабл(шаблон): return re.escape(шаблон)
def ОчиститьКэш(): return re.purge()
